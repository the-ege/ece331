Seth Raymond
ECE331
Homework 1 - Jan 25, 2016

1. The OpenVIM tutorial has been completed.

2. The Kernel Coding Style document has been read.

3. 
 
#include <stdio.h>

/*
 * This program prints each of the
 * arguments passed to the program
 * on a separate line. This also
 * includes the program name stored
 * in argv[0].
 */

int main(int argc, char *argv[])
{
	int i;
	for (i=0;i<argc;i++) printf("%s\n", argv[i]);
	return 0;
}

4.

#include <stdio.h>
#include <stdlib.h>

/*
 * The last line that is printed to stdout is the last
 * successful amount of bytes that can be allocated. It
 * is possible that some number of bytes between the
 * printed value and twice that value can be allocated.
 */

int main(void)
{
	size_t i = 0;
	void *ptr;

	while (1) {
		ptr = malloc(i);
		if (ptr != NULL) free(ptr); /* Frees only if allocation is successful */
		else return 0;
		printf("Allocated %d bytes\n", i);
		if (i == 0) i = 2; /* Because just doing a multiply by 2 when i is 0 keeps it at 0... */
		else i *= 2;

	}
}

5. 

#include <stdio.h>
#include <stdlib.h>

int main (int argc, char *argv[])
{
	int i, val = atoi(argv[1]); /* Get the value as an integer */

	/*
	 * Loop over the 31 bits available, mask is 31 bits with a 1 in the MSB pos.
	 * Check to see if the val is divisible by 2^i. If so, a 1 goes there.
	 * Otherwise, it should be a 0. The 2^i computation is taken care of with
	 * the mask. The value is 31 bits with a 1 in MSB (0x8... would give 32 bits).
	 */ 
	for (i=0;i<31;i++) printf("%d", val&(0x40000000>>i)? 1 : 0);

	printf("\n"); /* To keep good terminal formatting */
	return 0;		
}

6.
	a) /sbin contains system binaries that work in conjunction with those found in /bin.
	The utilities found in /sbin seem to be ones that have to do with powering on and off the machine.
	There are also various utilities for configuration and disk checking.
	b) According to the FHS, /usr/share contains "architecture-independent data." The
	required symbolic links to directories are man and misc.

7. Done.

8.
	a) sudo apt-get install octave
	b) sudo apt-get remove sonic-pi
	c) sudo apt-get remove scratch
	d) sudo apt-get install git
	e) #adafruit has a quick and painless setup for this:
		curl -sLS https://apt.adafruit.com/add | sudo bash
		sudo apt-get install avrdude
