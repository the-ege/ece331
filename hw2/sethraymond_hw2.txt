Seth Raymond
ECE331 Homework 2

1.
2. wget http://www.open.com.au/mikem/bcm2835/bcm2835-1.5.tar.gz
   tar xzvf bcm2835.1.5.tar.gz
   cd bcm2835-1.5
   ./configure
   make
   sudo make install
3.



4.

#include <stdio.h>
#include <glob.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>

/*
 * Program takes one command line argument as a glob pattern
 * and returns the file permissions as hex for each file
 * matched with the glob pattern.
 */

int main (int argc, char *argv[])
{
	glob_t glob_struct;
	struct stat stat_struct;
	int status, i;

	if (argc == 1 || argc > 2){ /* There is always at least one argument, the program name */
		printf("Incorrect number of arguments!\n");
		return -1;
	}
	
	status = glob(argv[1], 0, NULL, &glob_struct);
	
	/* Error checking */

	if (status == GLOB_NOSPACE) {
		printf("Glob returns out of memory error!\n");
		return -2;
	}
	else if (status == GLOB_ABORTED) {
		printf("Glob returns a read error!\n");
		return -3;
	}
	else if (status == GLOB_NOMATCH) {
		printf("Glob returns no found matches!\n");
		return -4;
	}

	for (i=0;i<glob_struct.gl_pathc;i++) {
		status = stat(glob_struct.gl_pathv[i], &stat_struct); /* Call stat() on glob path, get info back*/
		/* Error checking */

		if (status != 0) {
			printf("Stat returns an error!\n");
			return -5;
		}

		/* Print permissions in hex */

		printf("%s : 0x%04x\n", glob_struct.gl_pathv[i],stat_struct.st_mode);

	}	

	globfree(&glob_struct); /* Pre-written function to free dynamically allocated mem in glob struct */

	return 0;
}

5. /\$[0-9]+\.?[0-9]{0,3}$/
   Minimum match is $0
   Matches on a '$' character, one or more numbers (ranging from 0-9), either 0 or 1 periods, and up to three 0-9 characters (because gas prices typically go out to three decimal points).
6.
	a) Will match on '-' and a 0-9 character with zero or one leading zeros between the number and the '-' character,
	or any number between 10 and 39, or on any number between 40 and 42.
	b) Will not match anything because the start of line cannot come after the end of line. 
7.
